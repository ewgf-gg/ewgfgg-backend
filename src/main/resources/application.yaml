spring:
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        jdbc:
          batch_size: ${HIBERNATE_BATCH_SIZE:1000}
        order_inserts: true
        order_updates: true
  output:
    ansi:
      enabled: ALWAYS

rabbitmq:
  queue:
    name: ${RABBITMQ_QUEUE_NAME:battle_queue}
  exchange:
    name: ${RABBITMQ_EXCHANGE_NAME:battle_exchange}
  routing:
    key: ${RABBITMQ_ROUTING_KEY:battle.routingkey}
  management:
    vhost: ${RABBITMQ_VHOST:/}

concurrency:
  rabbitmq: ${RABBITMQ_CONCURRENCY:4}

backpressure:
  threshold: ${BACKPRESSURE_THRESHOLD:50}
  slowdown:
    factor: ${BACKPRESSURE_SLOWDOWN_FACTOR:10}

wavu:
  api: ${WAVU_API:https://wank.wavu.wiki/api/replays}

security:
  rate-limit:
    requests-per-window: ${RATE_LIMIT_REQUESTS:20}
    window-minutes: ${RATE_LIMIT_WINDOW:1}
    cleanup-interval-ms: ${RATE_LIMIT_CLEANUP_MS:3600000}

logging:
  level:
    org:
      ewgf:
        controllers:
          PlayerController: INFO
          AggregatedStatisticController: INFO
        services:
          WavuService: INFO
          RabbitService: INFO
        configuration:
          BackpressureManager: INFO

---
# Development profile
spring:
  config:
    activate:
      on-profile: "dev"
    import: optional:docker-compose.yml
  application:
    name: ewgf-backend-development
  datasource:
    url: jdbc:postgresql://localhost:5432/Tekken-Database
    username: postgres
    password: guest

rabbitmq:
  management:
    api:
      url: http://localhost:15672/api
    username: guest
    password: guest

security:
  cors:
    allowed-origin: http://localhost:3000
    max-age-seconds: 3600

---
# Production profile
spring:
  config:
    activate:
      on-profile: "prod"
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
  application:
    name: ${SPRING_APP_NAME:ewgf-backend-production}
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}

rabbitmq:
  management:
    api:
      url: ${RABBITMQ_API_URL}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

security:
  cors:
    allowed-origin: ${CORS_ALLOWED_ORIGIN}
    max-age-seconds: ${CORS_MAX_AGE:3600}